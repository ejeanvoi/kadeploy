#!/bin/bash -e 

# Kadeploy 3.1
# Copyright (c) by INRIA, Emmanuel Jeanvoine - 2008-2012
# CECILL License V2 - http://www.cecill.info
# For details on use and redistribution please refer to License.txt


PID=0
Exit_handler_int()
{
  if [ -n "$SSH_AGENT_PID" ]
  then
    ssh-agent -k 1>/dev/null
  fi
}
Exit_handler_kill()
{
  if [ -n "$SSH_AGENT_PID" ]
  then
    ssh-agent -k 1>/dev/null
  fi
  kill -9 $PID
}

Exit_handler_term()
{
  if [ -n "$SSH_AGENT_PID" ]
  then
    ssh-agent -k 1>/dev/null
  fi
  kill -15 $PID
}

if [ -x /etc/kadeploy3/load_kadeploy_env ] && [ -z "${KADEPLOY_CONFIG_DIR}" ]
then
    KADEPLOY_CONFIG_DIR=/etc/kadeploy3
    export KADEPLOY_CONFIG_DIR
elif [ ! -x $KADEPLOY_CONFIG_DIR/load_kadeploy_env ]
then
    echo "The Kadeploy environment cannot be loaded, please check your configuration"
    exit 1
fi

unset http_proxy
source $KADEPLOY_CONFIG_DIR/load_kadeploy_env

# Launch an ssh agent (useful when deploying from production environment)
if [ -e $KADEPLOY_CONFIG_DIR/keys/id_deploy ]
then
  eval $(ssh-agent) &>/dev/null
  ssh-add $KADEPLOY_CONFIG_DIR/keys/id_deploy
fi

if [ -e `which logger` ]
then
  ruby $KADEPLOY_INSTALL_DIR/src/kadeploy_server.rb "$@" 2> >(logger -s -t "$(basename ${0})-error") &
else
  ruby $KADEPLOY_INSTALL_DIR/src/kadeploy_server.rb "$@" &
fi
PID=$!
trap Exit_handler_int INT
trap Exit_handler_term TERM
trap Exit_handler_kill KILL

wait

# Clean the ssh agent stuff
if [ -n "$SSH_AGENT_PID" ]
then
  ssh-agent -k 1>/dev/null
  rm -rf `dirname $SSH_AUTH_SOCK`
fi

exit 0
